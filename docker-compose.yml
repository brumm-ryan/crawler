version: "3.5"
services:
  mysql:
    container_name: temporal-mysql
    image: mysql:8.1.0
    environment:
      - MYSQL_ROOT_PASSWORD=root
    ports:
      - "3306:3306"
    volumes:
      - /var/lib/mysql
    networks:
      - temporal-network

  temporal:
    container_name: temporal
    image: temporalio/auto-setup:latest
    depends_on:
      - mysql
    environment:
      - DB=mysql8
      - DB_PORT=3306
      - MYSQL_USER=root
      - MYSQL_PWD=root
      - MYSQL_SEEDS=mysql
      - DYNAMIC_CONFIG_FILE_PATH=config/dynamicconfig/development-sql.yaml
    ports:
      - "7233:7233"
    volumes:
      - ./dynamicconfig:/etc/temporal/config/dynamicconfig
    networks:
      - temporal-network

  temporal-admin-tools:
    container_name: temporal-admin-tools
    image: temporalio/admin-tools:latest
    depends_on:
      - temporal
    environment:
      - TEMPORAL_ADDRESS=temporal:7233
      - TEMPORAL_CLI_ADDRESS=temporal:7233
    stdin_open: true
    tty: true
    networks:
      - temporal-network

  temporal-ui:
    container_name: temporal-ui
    image: temporalio/ui:latest
    depends_on:
      - temporal
    environment:
      - TEMPORAL_ADDRESS=temporal:7233
      - TEMPORAL_CORS_ORIGINS=http://localhost:3000
    ports:
      - "8080:8080"
    networks:
      - temporal-network

  redis:
    container_name: temporal-redis
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - temporal-network

  worker:
    build:
      context: ./apps/stagehand-temporal
      dockerfile: Dockerfile
    container_name: stagehand-temporal
    environment:
      - TEMPORAL_ADDRESS=temporal:7233
      - REDIS_HOST=redis
      - BROWSERLESS=browserless:3000
    depends_on:
      - temporal
      - mysql
      - redis
      - browserless
    networks:
      - temporal-network

  browserless:
    image: ghcr.io/browserless/chromium
    container_name: browserless
    environment:
      - CONCURRENT=10
      - TOKEN=6R0W53R135510
      - TIMEOUT=180000
    ports:
      - "3000:3000"
    networks:
      - temporal-network

  crawl-ux:
    container_name: crawl-ux
    build:
      context: ./apps/crawl-ux
      dockerfile: Dockerfile.dev
    environment:
      - TEMPORAL_ADDRESS=temporal:7233
      - CRAWLER_API=crawl-api:8000
    ports:
      - "8081:3000"
    volumes:
      - ./apps/crawl-ux:/app
      - /app/node_modules
    depends_on:
      - temporal
      - mysql
    networks:
      - temporal-network

  app-mysql:
    image: mysql:8.0
    container_name: crawler-api-mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: crawler
      MYSQL_USER: crawler_user
      MYSQL_PASSWORD: crawler_password
    ports:
      - "3307:3307"
    command: --port=3307
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - temporal-network

  crawl-api:
    build:
      context: ./apps/crawler-api
      dockerfile: Dockerfile
    container_name: crawler-api
    restart: always
    depends_on:
      app-mysql:
        condition: service_healthy
    environment:
      - DATABASE_URL=mysql+pymysql://root:rootpassword@app-mysql:3307/crawler
      - TEMPORAL_ADDRESS=temporal:7233
    ports:
      - "8000:8000"
    volumes:
      - ./apps/crawler-api:/app
    networks:
      - temporal-network

networks:
  temporal-network:
    driver: bridge
    name: temporal-network

volumes:
  redis-data:
  mysql_data:
